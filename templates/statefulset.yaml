# StatefulSet for Model Groups
# Each replica gets its own PVC, avoiding multi-attach issues
{{- range $groupName, $group := .Values.modelGroups }}
{{- if $group.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "inference-stack.fullname" $ }}-{{ $groupName }}
  labels:
    {{- include "inference-stack.labels" $ | nindent 4 }}
    app.kubernetes.io/component: model-group
    app.kubernetes.io/model-group: {{ $groupName }}
spec:
  serviceName: {{ include "inference-stack.fullname" $ }}-{{ $groupName }}
  replicas: {{ $group.replicaCount }}
  {{- with $group.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "inference-stack.modelGroup.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/model-group: {{ $groupName }}
  # VolumeClaimTemplates create a PVC for each replica
  {{- if $group.persistentVolumes }}
  volumeClaimTemplates:
    {{- range $pvc := $group.persistentVolumes }}
    - metadata:
        name: {{ $pvc.name }}
        labels:
          {{- include "inference-stack.labels" $ | nindent 10 }}
          app.kubernetes.io/component: model-group
          app.kubernetes.io/model-group: {{ $groupName }}
      spec:
        {{- with $pvc.accessModes }}
        accessModes:
          {{- range . }}
          - {{ . | quote }}
          {{- end }}
        {{- else }}
        accessModes:
          - ReadWriteOnce  # Default for StatefulSet per-replica PVCs
        {{- end }}
        {{- if $pvc.storageClassName }}
        {{- if eq $pvc.storageClassName "-" }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ $pvc.storageClassName | quote }}
        {{- end }}
        {{- else if $pvc.storageClass }}
        {{- if eq $pvc.storageClass "-" }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ $pvc.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ $pvc.size | quote }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- with $group.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "inference-stack.modelGroup.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/model-group: {{ $groupName }}
    spec:
      {{- with $group.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and $group.serviceAccount $group.serviceAccount.create }}
      serviceAccountName: {{ include "inference-stack.fullname" $ }}-{{ $groupName }}
      {{- end }}
      securityContext:
        {{- toYaml $group.podSecurityContext | nindent 8 }}
      {{- if $group.initContainers }}
      initContainers:
        {{- toYaml $group.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $groupName }}
          securityContext:
            {{- toYaml $group.securityContext | nindent 12 }}
          image: "{{ $group.image.repository }}:{{ $group.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $group.image.pullPolicy }}
          {{- if $group.command }}
          command:
            {{- toYaml $group.command | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ $group.containerPort }}
              protocol: TCP
            {{- range $group.additionalPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          {{- if and $group.startupProbe $group.startupProbe.enabled }}
          startupProbe:
            {{- if eq $group.startupProbe.type "http" }}
            httpGet:
              path: {{ $group.startupProbe.path }}
              port: http
            {{- else if eq $group.startupProbe.type "tcp" }}
            tcpSocket:
              port: http
            {{- end }}
            initialDelaySeconds: {{ $group.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ $group.startupProbe.periodSeconds }}
            timeoutSeconds: {{ $group.startupProbe.timeoutSeconds }}
            failureThreshold: {{ $group.startupProbe.failureThreshold }}
          {{- end }}
          {{- if and $group.livenessProbe $group.livenessProbe.enabled }}
          livenessProbe:
            {{- if eq $group.livenessProbe.type "http" }}
            httpGet:
              path: {{ $group.livenessProbe.path }}
              port: http
            {{- else if eq $group.livenessProbe.type "tcp" }}
            tcpSocket:
              port: http
            {{- end }}
            initialDelaySeconds: {{ $group.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $group.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $group.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ $group.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if and $group.readinessProbe $group.readinessProbe.enabled }}
          readinessProbe:
            {{- if eq $group.readinessProbe.type "http" }}
            httpGet:
              path: {{ $group.readinessProbe.path }}
              port: http
            {{- else if eq $group.readinessProbe.type "tcp" }}
            tcpSocket:
              port: http
            {{- end }}
            initialDelaySeconds: {{ $group.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $group.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $group.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ $group.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml $group.resources | nindent 12 }}
          env:
            {{- with $group.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if or $group.volumeMounts $group.persistentVolumes $group.volumes }}
          volumeMounts:
            {{- range $pvc := $group.persistentVolumes }}
            - name: {{ $pvc.name }}
              mountPath: {{ $pvc.mountPath }}
              {{- if $pvc.subPath }}
              subPath: {{ $pvc.subPath }}
              {{- end }}
            {{- end }}
            {{- with $group.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- if $group.volumes }}
      volumes:
        {{- with $group.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with $group.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $group.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $group.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}