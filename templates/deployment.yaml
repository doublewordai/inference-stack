# Onwards Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inference-stack.fullname" . }}-onwards
  labels:
    {{- include "inference-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: onwards
spec:
  replicas: {{ .Values.onwards.replicaCount }}
  selector:
    matchLabels:
      {{- include "inference-stack.onwards.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include "inference-stack.onwards.config" . | sha256sum }}
        {{- with .Values.onwards.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "inference-stack.onwards.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.onwards.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "inference-stack.onwards.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.onwards.podSecurityContext | nindent 8 }}
      containers:
        - name: onwards
          securityContext:
            {{- toYaml .Values.onwards.securityContext | nindent 12 }}
          image: "{{ .Values.onwards.image.repository }}:{{ .Values.onwards.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.onwards.image.pullPolicy }}
          args:
            - "-f=/app/config/config.json"
            {{- if .Values.onwards.metrics.enabled }}
            - "--metrics"
            - "--metrics-port={{ .Values.onwards.metrics.port }}"
            - "--metrics-prefix={{ .Values.onwards.metrics.prefix }}"
            {{- end }}
            {{- with .Values.onwards.extraArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.onwards.containerPort }}
              protocol: TCP
            {{- if .Values.onwards.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.onwards.metrics.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.onwards.probes.path }}
              port: http
            initialDelaySeconds: {{ .Values.onwards.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.onwards.probes.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.onwards.probes.path }}
              port: http
            initialDelaySeconds: {{ .Values.onwards.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.onwards.probes.readiness.periodSeconds }}
          resources:
            {{- toYaml .Values.onwards.resources | nindent 12 }}
          env:
            {{- with .Values.onwards.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            {{- with .Values.onwards.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "inference-stack.fullname" . }}-onwards
        {{- with .Values.onwards.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.onwards.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.onwards.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.onwards.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}