suite: test networkpolicy
tests:
  - it: should not render networkpolicy when disabled
    template: templates/networkpolicy.yaml
    set:
      networkPolicy:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should render onwards networkpolicy when configured
    template: templates/networkpolicy.yaml
    documentSelector:
      path: metadata.name
      value: RELEASE-NAME-inference-stack-onwards
    set:
      networkPolicy:
        enabled: true
        onwards:
          policyTypes:
            - Ingress
            - Egress
          ingress:
            - from:
              - podSelector:
                  matchLabels:
                    app: frontend
              ports:
              - protocol: TCP
                port: 3000
          egress:
            - to:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/component: model-group
              ports:
              - protocol: TCP
                port: 8000
    asserts:
      - isKind:
          of: NetworkPolicy
      - equal:
          path: metadata.name
          value: RELEASE-NAME-inference-stack-onwards
      - equal:
          path: spec.podSelector.matchLabels["app.kubernetes.io/component"]
          value: onwards
      - contains:
          path: spec.policyTypes
          content: Ingress
      - contains:
          path: spec.policyTypes
          content: Egress
      - equal:
          path: spec.ingress[0].from[0].podSelector.matchLabels.app
          value: frontend

  - it: should render model group networkpolicy when configured
    template: templates/networkpolicy.yaml
    documentSelector:
      path: metadata.name
      value: RELEASE-NAME-inference-stack-test-model
    set:
      networkPolicy:
        enabled: true
        modelGroups:
          test-model:
            policyTypes:
              - Ingress
              - Egress
            ingress:
              - from:
                - podSelector:
                    matchLabels:
                      app.kubernetes.io/component: onwards
                ports:
                - protocol: TCP
                  port: 8000
            egress:
              - to:
                - namespaceSelector:
                    matchLabels:
                      name: kube-system
                ports:
                - protocol: UDP
                  port: 53
      modelGroups:
        test-model:
          enabled: true
          image:
            repository: nginx
            tag: "latest"
            pullPolicy: IfNotPresent
          containerPort: 8000
          service:
            port: 8000
          replicaCount: 1
          modelAlias: ["test"]
          modelName: "test"
    asserts:
      - isKind:
          of: NetworkPolicy
      - equal:
          path: metadata.name
          value: RELEASE-NAME-inference-stack-test-model
      - equal:
          path: spec.podSelector.matchLabels["app.kubernetes.io/model-group"]
          value: test-model
      - equal:
          path: spec.ingress[0].from[0].podSelector.matchLabels["app.kubernetes.io/component"]
          value: onwards

  - it: should not render model group networkpolicy if not defined
    template: templates/networkpolicy.yaml
    set:
      networkPolicy:
        enabled: true
        modelGroups: {}  # No policies defined
      modelGroups:
        test-model:
          enabled: true
          image:
            repository: nginx
            tag: "latest"
            pullPolicy: IfNotPresent
          containerPort: 8000
          service:
            port: 8000
          replicaCount: 1
          modelAlias: ["test"]
          modelName: "test"
    asserts:
      - hasDocuments:
          count: 0  # No NetworkPolicies created

  - it: should handle complex network policies
    template: templates/networkpolicy.yaml
    documentSelector:
      path: metadata.name
      value: RELEASE-NAME-inference-stack-vllm-primary
    set:
      networkPolicy:
        enabled: true
        modelGroups:
          vllm-primary:
            policyTypes:
              - Ingress
              - Egress
            ingress:
              - from:
                - podSelector:
                    matchLabels:
                      app.kubernetes.io/component: onwards
                - namespaceSelector:
                    matchLabels:
                      name: monitoring
                ports:
                - protocol: TCP
                  port: 8000
              - from:
                - podSelector:
                    matchLabels:
                      app.kubernetes.io/model-group: vllm-primary
                ports:
                - protocol: TCP
                  port: 29500  # NCCL port for distributed inference
            egress:
              - to:
                - namespaceSelector:
                    matchLabels:
                      name: kube-system
                ports:
                - protocol: UDP
                  port: 53
              - to:
                - ipBlock:
                    cidr: 0.0.0.0/0
                    except:
                    - 169.254.169.254/32
                ports:
                - protocol: TCP
                  port: 443
      modelGroups:
        vllm-primary:
          enabled: true
          image:
            repository: vllm/vllm-openai
            tag: "latest"
            pullPolicy: IfNotPresent
          containerPort: 8000
          service:
            port: 8000
          replicaCount: 2
          modelAlias: ["primary"]
          modelName: "llama"
    asserts:
      - isKind:
          of: NetworkPolicy
      - lengthEqual:
          path: spec.ingress
          count: 2  # Two ingress rules
      - lengthEqual:
          path: spec.egress
          count: 2  # Two egress rules
      - equal:
          path: spec.egress[1].to[0].ipBlock.cidr
          value: 0.0.0.0/0

  - it: should handle both onwards and model group policies
    template: templates/networkpolicy.yaml
    set:
      networkPolicy:
        enabled: true
        onwards:
          policyTypes:
            - Ingress
        modelGroups:
          test-model:
            policyTypes:
              - Egress
      modelGroups:
        test-model:
          enabled: true
          image:
            repository: nginx
            tag: "latest"
            pullPolicy: IfNotPresent
          containerPort: 8000
          service:
            port: 8000
          replicaCount: 1
          modelAlias: ["test"]
          modelName: "test"
    asserts:
      - hasDocuments:
          count: 2  # Both onwards and test-model policies